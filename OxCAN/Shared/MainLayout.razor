@inherits LayoutComponentBase
@inject Blazored.LocalStorage.ILocalStorageService localStorage


<MudThemeProvider IsDarkMode="@_isDarkMode" Theme="_theme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>


<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Oxford Community Action Network</MudText>
        <MudSpacer />
        <MudToggleIconButton Toggled="@_isDarkMode" ToggledChanged="@ToggleDarkMode" Icon="@Icons.TwoTone.LightMode" Color="Color.Warning" 
                    ToggledIcon="@Icons.TwoTone.DarkMode" ToggledColor="@Color.Primary" Class="ma-4" T="bool"/>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>

</MudLayout>
@code {
    bool _drawerOpen = true;
    private MudTheme _theme = new()
    {
        Palette = new Palette()
        {

        },
        PaletteDark = new PaletteDark()
        {

        }
    };
    
    private bool _isDarkMode;
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    public void ToggleDarkMode(bool toggled)
    {
        _isDarkMode = toggled;
        localStorage.SetItemAsync("isDarkMode",_isDarkMode);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await localStorage.GetItemAsync<bool>("isDarkMode");
            StateHasChanged();
        }
    }
}